{"version":3,"sources":["options/convert.tsx","options/modelsColor.tsx","options/checking.tsx","reducers/index.tsx","actions/index.tsx","components/Picker/Picker.tsx","components/Picker/index.tsx","components/PresentColor/PresentColor.tsx","components/PresentColor/PresentColorLast.tsx","components/PresentColor/PresentColorOut.tsx","components/Regulate/RegulateTheme.tsx","components/Regulate/RegulateColor.tsx","components/Regulate/RegulateOpacity.tsx","components/BtnChangeType/BtnChangeType.tsx","components/BtnChangeType/index.tsx","components/CopyColor/CopyColor.tsx","components/CopyColor/index.tsx","store/store.tsx","components/InputCell/InputCell.tsx","components/InputCell/index.tsx","components/Models/Models.tsx","components/Models/index.tsx","components/Model/index.tsx","components/Model/Model.tsx","components/Colors/Swatch.tsx","components/DescriptionColor/ThemeWarning.tsx","components/DescriptionColor/DescriptionColor.tsx","components/DescriptionColor/index.tsx","components/Colors/Colors.tsx","components/Colors/index.tsx","components/MainBtns/MainBtns.tsx","components/MainBtns/index.tsx","components/ColorPicker/ColorPicker.tsx","components/ColorPicker/index.tsx","components/hoc/WithDataCP.tsx","components/DemoInput/index.tsx","components/DemoInput/DemoInput.tsx","components/app/index.tsx","components/app/App.tsx","index.tsx"],"names":["Convert","hsv_rgb","H","S","V","f","p","q","t","lH","R","G","B","switcher_hsv","Math","floor","key","map","elem","rgb_hsv","mas","rabs","gabs","babs","rr","gg","bb","s","v","diff","diffc","percentRoundFn","h","max","c","num","round","min","parseInt","Model","rgb","rgb_rgb","symbolInString","getStr","rgb_arr","join","getString","opacity","getWorkView","str","val","substring","indexOf","length","replace","split","item","i","Number","toFixed","splice","hsl","rgb_hsl","r","g","b","cmin","cmax","delta","l","abs","hsl_rgb","a1","x","m","switcher","hsl_arr","hex","a","rgb_hex","getOpacity","res","toString","a_str","hex_rgb","switcher_charAt","switcher_substring","avaibility","charAt","Checking","isNumber","check_color","value","type","Object","keys","forEach","check_arrFunctions","functions","undefined","slice","every","default_description","enable","save","edit","remove","index","InitialState","rgbMain","prevColor","models","options","picker","width","height","circle","main","sync","syncColor","callSave","callCancel","description","colors","name","color","id","reducer","state","action","payload","connect_obj","obj","element","change_rgbMain","change_enable","change_opacity","change_type","change_model","store","syncColors","change_description","change_main","change_syncColors","change_callSave","change_callCancel","change_store","cx_HSV","hsv","objStore","cx_opacity_hex","sync_model_from_rgbMain","modelValue","addColor","e","change_prevColor","eventHSV","dispatch","getStore","cx_HSV_rgbMain_model","eventAddColor","k","d","event_change_enable","event_change_colors","Picker","props","on","pxX","style_options","pxY","left","top","blockRef","React","createRef","styleCircle","styleBlock","handleMouseMove","cPos","mouseDown","bind","touchMoveStart","touchMove","this","updateCoords","prevProps","nst","pw","ph","forceUpdate","document","addEventListener","onmouseup","removeEventListener","current","getBoundingClientRect","bool","preventDefault","positX","positY","clientX","clientY","ceil","add_color","touches","changedTouches","newEvent","pageX","pageY","background","W","backgroundColor","getStyleCircle","getStyleBlock","ref","onMouseDown","onTouchStart","onTouchMove","onTouchEnd","className","style","draggable","PureComponent","mapDispatchToProps","Action","connect","PresentColorTheme","stylePresent","handleClick","stylingPresent","onClick","Component","PresentColorLast","PresentColorOut","RegulateTheme","regulateLine","line","w","touchStart","offsetWidth","offsetHeight","updateElem","stopPropagation","hookCPos","getLeft","RegulateColor","events","stylingCircle","RegulateOpacity","add_opacity","resize","changeType","cx_type_model","BtnChangeType","text","elemClass","classNames","active","CopyColor","useState","copied","setCopied","Fragment","getState","copy","setTimeout","src","alt","CopyWrapper","Consumer","createStore","composeWithDevTools","applyMiddleware","thunk","InputCell","label","maxLength","String","onChange","inputChange","classnames","hexBool","opacityBool","model","setState","nextProps","nextState","op","md","target","changeOpacity","changeModel","getInputOptions","cx_HSV_rgbMain_model_from_model","Models","inputs","update","push","buttons","toUpperCase","Swatch","ThemeWarning","funcYes","funcNo","right","DescriptionColor","inputColor","swatch","getCurrentStore","warningOptions","onSaveColor","onCancelColor","onSaveEditColor","onCancelEditColor","onYesDeleteColor","onNoDeleteColor","didmount","unsubscribeStore","updateStateFromStore","o","getDescriptionWithout","options_warning","handleChange","handleClickEdit","handleClickDelete","subscribe","updateInput","FocusInput","args","arr_keys","descr","assign","some","removeAttribute","focus","time","Date","getTime","cls","change_colors","disabled","CSSTransition","in","timeout","unmountOnExit","Colors","swatches","handleAddSwatch","swatchAdd","swatchClick","updateElems","DescriptionComponent","descr_enable","MainBtns","clickOk","clickCancel","Promise","resolve","then","func","CP","console","log","ColorPicker","changeEnable","DemoInput","WrappedComponent","colorsCP","add","changeAllColors","ind","findIndex","removeAllColors","change","nwstr","getColors","nw_obj","object","setColors","setStyleOptions","setColor","switchOn","switchOff","WithDataCP","picker_settings","colorOptions","saveColor","cancelColor","App","root","getElementById","ReactDom","render"],"mappings":"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","file":"static/js/main.b82073fd.chunk.js","sourcesContent":["const Convert = {\r\n  // hsv_rgb: function(H: number, S: number, V: number): number[] {\r\n  //   let R = 0,\r\n  //     G = 0,\r\n  //     B = 0;\r\n\r\n  //   H = H === 360 ? 0 : H;\r\n  //   S /= 100;\r\n  //   V /= 100;\r\n\r\n  //   let lH = Math.floor(H / 60);\r\n\r\n  //   let f = H / 60 - lH;\r\n  //   let p = V * (1 - S);\r\n  //   let q = V * (1 - S * f);\r\n  //   let t = V * (1 - (1 - f) * S);\r\n\r\n  //   let switcher_hsv = {\r\n  //     '0': [V, t, p],\r\n  //     '1': [q, V, p],\r\n  //     '2': [p, V, t],\r\n  //     '3': [p, q, V],\r\n  //     '4': [t, p, V],\r\n  //     '5': [V, p, q],\r\n  //   };\r\n  //   for (let key in switcher_hsv) {\r\n  //     if (+key === lH) {\r\n  //       [R, G, B] = switcher_hsv[key];\r\n  //     }\r\n  //   }\r\n\r\n  //   let [r, g, b] = [R, G, B].map(elem => Math.floor(elem * 255));\r\n\r\n  //   return [r, g, b];\r\n  // },\r\n\r\n  // rgb_hsv: function(mas: number[]) {\r\n  //   let h, s, v;\r\n  //   let [r, g, b] = mas.map(elem => +elem / 255);\r\n\r\n  //   let cmax = Math.max(r, g, b);\r\n  //   let cmin = Math.min(r, g, b);\r\n  //   let diff = cmax - cmin;\r\n\r\n  //   if (cmax == cmin) h = 0;\r\n\r\n  //   if (cmax == r) h = (60 * ((g - b) / diff) + 360) % 360;\r\n  //   else if (cmax == g) h = (60 * ((b - r) / diff) + 120) % 360;\r\n  //   else if (cmax == b) h = (60 * ((b - r) / diff) + 240) % 360;\r\n\r\n  //   if (cmax == 0) s = 0;\r\n  //   else s = (diff / cmax) * 100;\r\n\r\n  //   v = cmax * 100;\r\n\r\n  //   return [+h.toFixed(0), +s.toFixed(0), +v.toFixed(0)];\r\n  // },\r\n  // getHfromPosit: (left: number, width: number): number => {\r\n  //   let h = Math.abs(Math.round(left / (width / 360)) - 360);\r\n  //   h = h === 360 ? 0 : h;\r\n  //   return h;\r\n  // },\r\n  hsv_rgb: function(H: number, S: number, V: number): number[] {\r\n    let f,\r\n      p,\r\n      q,\r\n      t,\r\n      lH,\r\n      R = 0,\r\n      G = 0,\r\n      B = 0;\r\n\r\n    H = H === 360 ? 0 : H;\r\n    S /= 100;\r\n    V /= 100;\r\n\r\n    lH = Math.floor(H / 60);\r\n\r\n    f = H / 60 - lH;\r\n    p = V * (1 - S);\r\n    q = V * (1 - S * f);\r\n    t = V * (1 - (1 - f) * S);\r\n\r\n    let switcher_hsv = {\r\n      '0': [V, t, p],\r\n      '1': [q, V, p],\r\n      '2': [p, V, t],\r\n      '3': [p, q, V],\r\n      '4': [t, p, V],\r\n      '5': [V, p, q],\r\n    };\r\n    for (let key in switcher_hsv) {\r\n      if (+key === lH) {\r\n        [R, G, B] = switcher_hsv[key];\r\n      }\r\n    }\r\n\r\n    let [r, g, b] = [R, G, B].map(elem => Math.floor(elem * 255));\r\n\r\n    return [r, g, b];\r\n  },\r\n\r\n  rgb_hsv: function(mas: number[]) {\r\n    let [r, g, b] = mas;\r\n\r\n    let rabs,\r\n      gabs,\r\n      babs,\r\n      rr,\r\n      gg,\r\n      bb,\r\n      h = 0,\r\n      s,\r\n      v,\r\n      diff,\r\n      diffc,\r\n      percentRoundFn;\r\n\r\n    rabs = r / 255;\r\n    gabs = g / 255;\r\n    babs = b / 255;\r\n    v = Math.max(rabs, gabs, babs);\r\n    diff = v - Math.min(rabs, gabs, babs);\r\n    diffc = (c: number) => (v - c) / 6 / diff + 1 / 2;\r\n    percentRoundFn = (num: number) => Math.round(num * 100) / 100;\r\n    if (diff === 0) {\r\n      h = s = 0;\r\n    } else {\r\n      s = diff / v;\r\n      rr = diffc(rabs);\r\n      gg = diffc(gabs);\r\n      bb = diffc(babs);\r\n\r\n      if (rabs === v) {\r\n        h = bb - gg;\r\n      } else if (gabs === v) {\r\n        h = 1 / 3 + rr - bb;\r\n      } else if (babs === v) {\r\n        h = 2 / 3 + gg - rr;\r\n      }\r\n      if (h < 0) {\r\n        h += 1;\r\n      } else if (h > 1) {\r\n        h -= 1;\r\n      }\r\n    }\r\n\r\n    return [\r\n      Math.round(h * 360),\r\n      +parseInt(percentRoundFn(s * 100)),\r\n      +parseInt(percentRoundFn(v * 100)),\r\n    ];\r\n  },\r\n};\r\n\r\nexport default Convert;\r\n","let Model = {\r\n  rgb: {\r\n    rgb_rgb: (rgb: number[]) => {\r\n      return rgb;\r\n    },\r\n    symbolInString: 'rgb',\r\n    getStr(rgb_arr: number[]) {\r\n      return 'rgb(' + rgb_arr.join(',') + ')';\r\n    },\r\n    getString: function(rgb_arr: number[], opacity: number): string {\r\n      let str = '';\r\n      if (opacity === 1) str = 'rgb(' + rgb_arr.join(', ') + ')';\r\n      else str = 'rgba(' + rgb_arr.join(', ') + ', ' + opacity + ')';\r\n      return str;\r\n    },\r\n    getWorkView: (str: string): { val: number[]; opacity: number } => {\r\n      let str_arr = str\r\n        .substring(str.indexOf('(') + 1, str.length - 1)\r\n        .replace(/ /g, '')\r\n        .split(',');\r\n\r\n      let opacity = 1;\r\n\r\n      let val = str_arr.map((item, i) => {\r\n        let res = i === 3 ? +Number(item).toFixed(2) : +parseInt(item);\r\n        return res;\r\n      });\r\n\r\n      if (str.indexOf('rgba') >= 0 && val[3]) {\r\n        opacity = val[3];\r\n        val.splice(-1, 1);\r\n      } else opacity = 1;\r\n\r\n      let rgba_obj = {\r\n        val,\r\n        opacity,\r\n      };\r\n\r\n      return rgba_obj;\r\n    },\r\n  },\r\n  hsl: {\r\n    rgb_hsl: function(rgb: number[], opacity: number) {\r\n      // Make r, g, and b fractions of 1\r\n      let [r, g, b] = rgb;\r\n      r /= 255;\r\n      g /= 255;\r\n      b /= 255;\r\n\r\n      // Find greatest and smallest channel values\r\n      let cmin = Math.min(r, g, b),\r\n        cmax = Math.max(r, g, b),\r\n        delta = cmax - cmin,\r\n        h = 0,\r\n        s = 0,\r\n        l = 0;\r\n\r\n      if (delta === 0) h = 0;\r\n      // Red is max\r\n      else if (cmax === r) h = ((g - b) / delta) % 6;\r\n      // Green is max\r\n      else if (cmax === g) h = (b - r) / delta + 2;\r\n      // Blue is max\r\n      else h = (r - g) / delta + 4;\r\n\r\n      h = Math.round(h * 60);\r\n\r\n      // Make negative hues positive behind 360°\r\n      if (h < 0) h += 360;\r\n\r\n      l = (cmax + cmin) / 2;\r\n\r\n      // Calculate saturation\r\n      s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r\n\r\n      // Multiply l and s by 100\r\n      s = +parseInt((s * 100).toFixed(1));\r\n      l = +parseInt((l * 100).toFixed(1));\r\n\r\n      return [h, s, l];\r\n    },\r\n    hsl_rgb: function(hsl: number[]) {\r\n      let [h, s, l] = hsl;\r\n      s /= 100;\r\n      l /= 100;\r\n\r\n      let c = (1 - Math.abs(2 * l - 1)) * s,\r\n        x = c * (1 - Math.abs(((h / 60) % 2) - 1)),\r\n        m = l - c / 2,\r\n        r = 0,\r\n        g = 0,\r\n        b = 0;\r\n\r\n      let a1, a2;\r\n      let switcher = {\r\n        '0': [c, x, 0],\r\n        '60': [x, c, 0],\r\n        '120': [0, c, x],\r\n        '180': [0, x, c],\r\n        '240': [x, 0, c],\r\n        '300': [c, 0, x],\r\n      };\r\n      for (let key in switcher) {\r\n        a1 = +key;\r\n        a2 = a1 + 60;\r\n        if (a1 <= h && h < a2) {\r\n          [r, g, b] = switcher[key].map(elem => elem);\r\n        }\r\n      }\r\n\r\n      [r, g, b] = [r, g, b].map(elem => Math.round((elem + m) * 255));\r\n      return [r, g, b];\r\n    },\r\n    symbolInString: 'hsl',\r\n    getString: function(hsl_arr: number[], opacity: number): string {\r\n      let str = '';\r\n      if (opacity === 1)\r\n        str = `hsl(${hsl_arr[0]}, ${hsl_arr[1]}%, ${hsl_arr[2]}%)`;\r\n      else\r\n        str = `hsla(${hsl_arr[0]}, ${hsl_arr[1]}%, ${hsl_arr[2]}%, ${opacity})`;\r\n\r\n      return str;\r\n    },\r\n    getWorkView: (str: string) => {\r\n      let str_arr = str\r\n        .substring(str.indexOf('(') + 1, str.length - 1)\r\n        .replace(/ /g, '')\r\n        .split(',');\r\n\r\n      let opacity = 1;\r\n\r\n      let val = str_arr.map((item, i) => {\r\n        let res = i === 3 ? +Number(item).toFixed(2) : +parseInt(item);\r\n        return res;\r\n      });\r\n\r\n      if (str.indexOf('hsla') >= 0 && val[3]) {\r\n        opacity = val[3];\r\n        val.splice(-1, 1);\r\n      } else opacity = 1;\r\n\r\n      let rgba_obj = {\r\n        val,\r\n        opacity,\r\n      };\r\n      return rgba_obj;\r\n    },\r\n  },\r\n  hex: {\r\n    getWorkView: (hex: string) => {\r\n      let opacity = 1;\r\n      if (hex.length === 9) {\r\n        let a = hex.substring(7, 9);\r\n        a = a ? a : 'ff';\r\n        opacity = +(+parseInt(a, 16) / 255).toFixed(2);\r\n      }\r\n\r\n      let hex_obj = {\r\n        val: hex,\r\n        opacity,\r\n      };\r\n      return hex_obj;\r\n    },\r\n    getString: function(hex: string, opacity: number): string {\r\n      return hex;\r\n    },\r\n    rgb_hex: (rgb: number[], opacity: number) => {\r\n      let a = Model.hex.getOpacity(opacity);\r\n\r\n      let [r, g, b] = rgb.map(elem => {\r\n        let res = elem.toString(16);\r\n        return res.length === 1 ? '0' + res : res;\r\n      });\r\n\r\n      return '#' + r + g + b + a;\r\n    },\r\n    getOpacity: (opacity: number) => {\r\n      let a_str = Math.round(opacity * 255).toString(16);\r\n      a_str = a_str.length === 1 ? '0' + a_str : a_str === 'ff' ? '' : a_str;\r\n      return a_str;\r\n    },\r\n    hex_rgb: function(hex: string): number[] {\r\n      let r, g, b, a;\r\n      hex = hex.replace('#', '');\r\n      let switcher_charAt = {\r\n        '3': [0, 1, 2],\r\n        '4': [0, 1, 2, 3],\r\n      };\r\n      let switcher_substring = {\r\n        '6': [0, 2, 4],\r\n        '8': [0, 2, 4, 6],\r\n      };\r\n      let avaibility = false;\r\n      for (let key in switcher_charAt) {\r\n        if (+key === hex.length) {\r\n          [r, g, b, a] = switcher_charAt[key].map(elem => hex.charAt(elem));\r\n          avaibility = true;\r\n        }\r\n      }\r\n      for (let key in switcher_substring) {\r\n        if (+key === hex.length) {\r\n          [r, g, b, a] = switcher_substring[key].map(elem =>\r\n            hex.substring(elem, elem + 2),\r\n          );\r\n          avaibility = true;\r\n        }\r\n      }\r\n      if (!avaibility) return [0, 0, 0];\r\n\r\n      a = !a ? 'ff' : a;\r\n      [r, g, b, a] = [r, g, b, a].map(\r\n        elem => +parseInt(1 === elem.length ? elem + elem : elem, 16),\r\n      );\r\n      a /= 255;\r\n      return [r, g, b];\r\n    },\r\n    symbolInString: '#',\r\n  },\r\n};\r\n\r\nexport default Model;\r\n","import Model from './modelsColor';\r\n\r\nconst Checking = {\r\n  isNumber: () => {},\r\n  check_color: (value: string): string => {\r\n    let type = 'rgb';\r\n\r\n    let models = Object.keys(Model);\r\n\r\n    models.forEach(item => {\r\n      if (value.indexOf(Model[item].symbolInString) > -1) type = item;\r\n    });\r\n\r\n    return type;\r\n  },\r\n  check_arrFunctions: (functions): boolean => {\r\n    let bool = false;\r\n\r\n    if (functions === undefined || !functions) return false;\r\n\r\n    if (typeof functions == 'object' && functions.slice) {\r\n      if (functions.length > 0) {\r\n        if (functions.every(item => typeof item == 'function')) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return bool;\r\n  },\r\n};\r\n\r\nexport default Checking;\r\n","import { ThemeAction, ThemeStore } from '../interfaces';\r\n\r\nexport const default_style_options = {\r\n  picker: {\r\n    width: 250,\r\n    height: 140,\r\n  },\r\n  circle: {\r\n    width: 12,\r\n    height: 12,\r\n  },\r\n};\r\n\r\nexport const default_description = {\r\n  enable: false,\r\n  save: false,\r\n  edit: false,\r\n  remove: false,\r\n  index: 0,\r\n};\r\n\r\nexport const default_sync = {\r\n  syncColor: [],\r\n  callSave: [],\r\n  callCancel: [],\r\n};\r\n\r\nexport const InitialState: ThemeStore = {\r\n  H: 0,\r\n  S: 0,\r\n  V: 100,\r\n  opacity: 1,\r\n  rgbMain: [255, 255, 255],\r\n  type: 'rgb',\r\n  prevColor: 'hsl(109, 70%, 39%)',\r\n  models: {\r\n    hex: '#fefefe',\r\n    rgb: [255, 255, 255],\r\n    hsl: [0, 0, 100],\r\n  },\r\n  options: default_style_options,\r\n  enable: false,\r\n  main: false,\r\n  sync: default_sync,\r\n  description: default_description,\r\n  colors: [\r\n    { name: 'Color 1', color: '#F44336', id: 'q' },\r\n    { name: 'Color 2', color: '#E91E63', id: 'w' },\r\n    { name: 'Color 3', color: 'rgb(156, 39, 176)', id: 'e' },\r\n    { name: 'Color 4', color: 'hsl(117, 84%, 46%)', id: 'r' },\r\n    { name: 'Color 5', color: '#3F51B5', id: 't' },\r\n    { name: 'Color 6', color: '#2196F3', id: 'y' },\r\n    { name: 'Color 7', color: '#03A9F4', id: 'u' },\r\n    { name: 'Color 8', color: '#009688', id: 'i' },\r\n    { name: 'Color 9', color: '#4CAF50', id: 'o' },\r\n    { name: 'Color 10', color: '#8BC34A', id: 'p' },\r\n    { name: 'Color 11', color: '#CDDC39', id: 'a' },\r\n    { name: 'Color 12', color: '#FFEB3B', id: 's' },\r\n    { name: 'Color 13', color: '#FFC107', id: 'd' },\r\n    { name: 'Color 14', color: '#FF5722', id: 'f' },\r\n    { name: 'Color 15', color: '#795548', id: 'g' },\r\n    { name: 'Color 16', color: '#9E9E9E', id: 'h' },\r\n    { name: 'Color 17', color: '#607D8B', id: 'j' },\r\n  ],\r\n};\r\n\r\nconst reducer = (state: any = InitialState, action: ThemeAction) => {\r\n  switch (action.type) {\r\n    case 'CHANGE_RGB':\r\n      return { ...state, rgbMain: action.payload };\r\n\r\n    case 'CHANGE_OPACITY': {\r\n      return { ...state, opacity: action.payload };\r\n    }\r\n    case 'CHANGE_TYPE': {\r\n      return { ...state, type: action.payload };\r\n    }\r\n\r\n    case 'CHANGE_MODEL': {\r\n      let type = state.type;\r\n      return { ...state, models: { ...state.models, [type]: action.payload } };\r\n    }\r\n    case 'CHANGE_USER_COLORS': {\r\n      return {\r\n        ...state,\r\n        colors: action.payload,\r\n      };\r\n    }\r\n    case 'CHANGE_PREV_COLOR': {\r\n      return {\r\n        ...state,\r\n        prevColor: action.payload,\r\n      };\r\n    }\r\n    case 'CHANGE_DESCRIPTION': {\r\n      return {\r\n        ...state,\r\n        description: action.payload,\r\n      };\r\n    }\r\n    case 'CHANGE_H':\r\n      return {\r\n        ...state,\r\n        H: action.payload == null ? state.H : action.payload,\r\n      };\r\n    case 'CHANGE_S':\r\n      return {\r\n        ...state,\r\n        S: action.payload == null ? state.S : action.payload,\r\n      };\r\n    case 'CHANGE_V':\r\n      return {\r\n        ...state,\r\n        V: action.payload == null ? state.V : action.payload,\r\n      };\r\n\r\n    case 'CHANGE_STORE': {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n    case 'CHANGE_OPTIONS': {\r\n      return {\r\n        ...state,\r\n        options: action.payload,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { IDescription, Ifunctions, IOptions, Icolors } from '../interfaces';\r\nimport Convert from '../options/convert';\r\nimport Model from '../options/modelsColor';\r\nimport Checking from '../options/checking';\r\nimport { default_description } from '../reducers';\r\n\r\nexport function connect_obj(...mas) {\r\n  let obj = {};\r\n  mas.forEach(element => {\r\n    obj = { ...obj, ...element };\r\n  });\r\n  return obj;\r\n}\r\n\r\n// Изменение rgbMain\r\nexport const change_rgbMain = (rgbMain: number[]) => {\r\n  return { rgbMain };\r\n};\r\n\r\n// Изменение enable picker\r\nexport const change_enable = (enable: boolean) => {\r\n  return { enable };\r\n};\r\n\r\n// Изменение opacity\r\nexport const change_opacity = (opacity: number) => {\r\n  return { opacity };\r\n};\r\n\r\n// Изменение type\r\nexport const change_type = (type: string) => {\r\n  return { type };\r\n};\r\n\r\n// Изменение model\r\nexport const change_model = (value: number[] | string, store) => {\r\n  const { type, models, main, sync, opacity } = store;\r\n  let { syncColors } = sync;\r\n  if (main) {\r\n    let color = Model[type].getString(value, opacity);\r\n    syncColors.forEach(element => {\r\n      element(color);\r\n    });\r\n  }\r\n\r\n  return { models: { ...models, [type]: value } };\r\n};\r\n\r\nexport const change_colors = (colors: { name: string; color: string }[]) => {\r\n  return { colors };\r\n};\r\n\r\n// Изменение PrevColor\r\nexport const change_prevColor = (prevColor, main) => {\r\n  return main ? { prevColor } : {};\r\n};\r\n\r\n// Изменение description\r\nexport const change_description = (description: IDescription) => {\r\n  return { description };\r\n};\r\n\r\n// Изменение main\r\nexport const change_main = (main: boolean) => {\r\n  return { main };\r\n};\r\n\r\n// Изменение syncColors\r\nexport const change_syncColors = (syncColors: Ifunctions[]) => {\r\n  return { syncColors };\r\n};\r\n\r\n// Изменение callSave\r\nexport const change_callSave = (callSave: Ifunctions[]) => {\r\n  return { callSave };\r\n};\r\n\r\n// Изменение callCancel\r\nexport const change_callCancel = (callCancel: Ifunctions[]) => {\r\n  return { callCancel };\r\n};\r\n\r\n// Изменение Store\r\nconst change_store = obj => {\r\n  return {\r\n    type: 'CHANGE_STORE',\r\n    payload: obj,\r\n  };\r\n};\r\n\r\n// Изменение HSV (change_h, change_s, change_v)\r\nexport const cx_HSV = (hsv: any, store) => {\r\n  let objStore = {};\r\n  let [H, S, V] = hsv;\r\n\r\n  if (H !== null) objStore['H'] = H;\r\n  else H = store['H'];\r\n\r\n  if (S !== null) objStore['S'] = S;\r\n  else S = store['S'];\r\n\r\n  if (V !== null) objStore['V'] = V;\r\n  else V = store['V'];\r\n\r\n  return objStore;\r\n};\r\n\r\n// Изменение Типа и изменение полей model\r\nexport const cx_type_model = (type: string, store) => {\r\n  let a = change_type(type);\r\n  let b = sync_model_from_rgbMain({ ...store, type });\r\n  return connect_obj(a, b);\r\n};\r\n\r\n// Изменение opacity и hex\r\nexport const cx_opacity_hex = (opacity: number, store) => {\r\n  let a = change_opacity(opacity);\r\n\r\n  const { models, main, sync, type } = store;\r\n  let b;\r\n  let { syncColors } = sync;\r\n  if (type === 'hex') {\r\n    b = sync_model_from_rgbMain({ ...store, ...a });\r\n  }\r\n\r\n  if (main) {\r\n    let color = Model[type].getString(\r\n      b ? b.models[type] : models[type],\r\n      a.opacity,\r\n    );\r\n    syncColors.forEach(element => {\r\n      element(color);\r\n    });\r\n  }\r\n  return connect_obj(a, b);\r\n};\r\n\r\n// Синхронизация HSV => rgbMain\r\nexport const sync_rgbMain = store => {\r\n  const { H, S, V } = store;\r\n  let rgb = Convert.hsv_rgb(H, S, V);\r\n  let obj = change_rgbMain(rgb);\r\n  return obj;\r\n};\r\n\r\n// Синхнонизация rgbMain => model\r\nexport const sync_model_from_rgbMain = store => {\r\n  const { rgbMain, type, opacity } = store;\r\n  let modelValue = Model[type]['rgb_' + type](rgbMain, opacity);\r\n  let a = change_model(modelValue, store);\r\n\r\n  return a;\r\n};\r\n\r\n// Изменение HSV и rgbMain и model\r\nexport const cx_HSV_rgbMain_model = (hsv: any, store) => {\r\n  // let { type, opacity, models } = store;\r\n  let { type, opacity, models } = store;\r\n  let objStore = {};\r\n  let [H, S, V] = hsv;\r\n\r\n  if (H !== null) objStore['H'] = H;\r\n  else H = store['H'];\r\n\r\n  if (S !== null) objStore['S'] = S;\r\n  else S = store['S'];\r\n\r\n  if (V !== null) objStore['V'] = V;\r\n  else V = store['V'];\r\n\r\n  objStore['rgbMain'] = Convert.hsv_rgb(H, S, V);\r\n\r\n  let b = sync_model_from_rgbMain({\r\n    ...store,\r\n    type,\r\n    opacity,\r\n    rgbMain: objStore['rgbMain'],\r\n    models,\r\n  });\r\n\r\n  objStore['models'] = b.models;\r\n\r\n  return objStore;\r\n};\r\n\r\nexport const addColor = (value: string, main: boolean, store) => {\r\n  const type = Checking.check_color(value);\r\n  let { val, opacity } = Model[type].getWorkView(value);\r\n  let rgb = Model[type][type + '_rgb'](val);\r\n  let hsv = Convert.rgb_hsv(rgb);\r\n  let a = cx_HSV(hsv, store);\r\n  let b = change_rgbMain(rgb);\r\n  let e = change_opacity(opacity);\r\n  let c = change_type(type);\r\n  let d = change_model(val, { ...store, type });\r\n  let k = change_prevColor(value, main);\r\n  let x = change_description(default_description);\r\n  return connect_obj(a, b, c, d, e, k, x);\r\n};\r\n\r\nexport const cx_HSV_rgbMain_model_from_model = (\r\n  value: string | number,\r\n  index: number,\r\n  store,\r\n) => {\r\n  const { type, models } = store;\r\n  let model = models[type];\r\n  let val;\r\n\r\n  if (type === 'hex') {\r\n    val = value;\r\n  } else {\r\n    val = model.slice();\r\n    val[index] = +value;\r\n  }\r\n\r\n  let rgb = Model[type][type + '_rgb'](val);\r\n  let hsv = Convert.rgb_hsv(rgb);\r\n  let a = cx_HSV(hsv, store);\r\n  let b = change_rgbMain(rgb);\r\n\r\n  let c;\r\n  if (type === 'hex') {\r\n    c = change_model(val, store);\r\n  } else {\r\n    c = change_model([...val], store);\r\n  }\r\n\r\n  return connect_obj(a, b, c);\r\n};\r\n\r\nexport const eventHSV = hsv => (dispatch, getStore) => {\r\n  const store = getStore();\r\n  let obj = cx_HSV_rgbMain_model(hsv, store);\r\n  dispatch(change_store(obj));\r\n};\r\n\r\nexport const eventOpacity = opacity => (dispatch, getStore) => {\r\n  const store = getStore();\r\n  let obj = cx_opacity_hex(opacity, store);\r\n  dispatch(change_store(obj));\r\n};\r\n\r\nexport const eventBtnChangeType = type => (dispatch, getStore) => {\r\n  const store = getStore();\r\n  let obj = cx_type_model(type, store);\r\n  dispatch(change_store(obj));\r\n};\r\n\r\nexport const eventChangeDescription = description => (dispatch, getStore) => {\r\n  let obj = change_description(description);\r\n  let action = {\r\n    type: 'CHANGE_DESCRIPTION',\r\n    payload: obj.description,\r\n  };\r\n  dispatch(action);\r\n};\r\n\r\nexport const eventClickSwatch = index => (dispatch, getStore) => {\r\n  let description = {\r\n    edit: false,\r\n    save: false,\r\n    remove: false,\r\n    enable: true,\r\n    index,\r\n  };\r\n  let store = getStore();\r\n  let color = store.colors[index].color;\r\n  let a = addColor(color, false, store);\r\n\r\n  let b = change_description(description);\r\n\r\n  let obj = connect_obj(a, b);\r\n\r\n  dispatch(change_store(obj));\r\n};\r\n\r\nexport const eventClickAddSwatch = () => (dispatch, getStore) => {\r\n  let description = {\r\n    edit: false,\r\n    save: true,\r\n    remove: false,\r\n    enable: true,\r\n    index: 0,\r\n  };\r\n  let action = {\r\n    type: 'CHANGE_DESCRIPTION',\r\n    payload: description,\r\n  };\r\n  dispatch(action);\r\n};\r\n\r\nexport const eventChangeInputModel = (val, index) => (dispatch, getStore) => {\r\n  let store = getStore();\r\n  let obj = cx_HSV_rgbMain_model_from_model(val, index, store);\r\n\r\n  dispatch(change_store(obj));\r\n};\r\n\r\nexport const eventChangeInputOpacity = val => (dispatch, getStore) => {\r\n  let store = getStore();\r\n  let obj = cx_opacity_hex(val, store);\r\n\r\n  dispatch(change_store(obj));\r\n};\r\n\r\nexport const eventClickPrevColor = () => (dispatch, getStore) => {\r\n  let store = getStore();\r\n  let obj = addColor(store.prevColor, true, store);\r\n\r\n  dispatch(change_store(obj));\r\n};\r\n\r\nexport const eventAddColor = options => (dispatch, getStore) => {\r\n  let store = getStore();\r\n  const { enable } = store;\r\n  let { color, syncColors, callSave, callCancel } = options;\r\n\r\n  let a = addColor(color, true, store);\r\n\r\n  let b = change_main(false);\r\n  let c = change_syncColors([]);\r\n  let d = change_callSave([]);\r\n  let e = change_callCancel([]);\r\n\r\n  if (Checking.check_arrFunctions(syncColors)) {\r\n    b = change_main(true);\r\n    c = change_syncColors(syncColors);\r\n  }\r\n  if (Checking.check_arrFunctions(callSave)) {\r\n    d = change_callSave(callSave);\r\n  }\r\n  if (Checking.check_arrFunctions(callCancel)) {\r\n    e = change_callCancel(callCancel);\r\n  }\r\n\r\n  let k;\r\n  if (!enable) k = change_enable(true);\r\n\r\n  let sync = connect_obj(c, d, e);\r\n  let obj = connect_obj(a, b, k, { sync });\r\n\r\n  dispatch(change_store(obj));\r\n};\r\n\r\nexport const eventClickOk = () => (dispatch, getStore) => {\r\n  let {\r\n    sync: { callSave },\r\n    models,\r\n    type,\r\n    opacity,\r\n    main,\r\n  } = getStore();\r\n  let color = Model[type].getString(models[type], opacity);\r\n\r\n  let a = change_enable(false);\r\n  let b = change_main(false);\r\n  let c = change_syncColors([]);\r\n  let d = change_callSave([]);\r\n  let e = change_callCancel([]);\r\n\r\n  let sync = connect_obj(c, d, e);\r\n\r\n  let obj = connect_obj(a, b, { sync });\r\n\r\n  dispatch(change_store(obj));\r\n\r\n  if (main) {\r\n    Promise.resolve().then(() => {\r\n      callSave.forEach(func => {\r\n        func(color);\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\nexport const eventClickCancel = () => (dispatch, getStore) => {\r\n  let {\r\n    sync: { callCancel },\r\n    models,\r\n    type,\r\n    opacity,\r\n    prevColor,\r\n    main,\r\n  } = getStore();\r\n  let color = Model[type].getString(models[type], opacity);\r\n\r\n  let a = change_enable(false);\r\n  let b = change_main(false);\r\n  let c = change_syncColors([]);\r\n  let d = change_callSave([]);\r\n  let e = change_callCancel([]);\r\n\r\n  let sync = connect_obj(c, d, e);\r\n\r\n  let obj = connect_obj(a, b, { sync });\r\n\r\n  dispatch(change_store(obj));\r\n  // Исправить\r\n  if (main) {\r\n    Promise.resolve().then(() => {\r\n      callCancel.forEach(func => {\r\n        func(color, prevColor);\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\nexport const event_change_enable = (enable: boolean) => dispatch => {\r\n  let a = change_enable(enable);\r\n  let b = change_description(default_description);\r\n  let obj = connect_obj(a, b);\r\n  dispatch(change_store(obj));\r\n};\r\n\r\nexport const event_change_options = (style_options: IOptions) => (\r\n  dispatch,\r\n  getStore,\r\n) => {\r\n  let { options } = getStore();\r\n  let nw_obj = {};\r\n  for (let key in options) {\r\n    nw_obj[key] = {\r\n      ...options[key],\r\n      ...style_options[key],\r\n    };\r\n  }\r\n  let action = {\r\n    type: 'CHANGE_OPTIONS',\r\n    payload: nw_obj,\r\n  };\r\n\r\n  dispatch(action);\r\n};\r\n\r\nexport const event_change_colors = (colors: Icolors[] | []) => dispatch => {\r\n  let action = {\r\n    type: 'CHANGE_USER_COLORS',\r\n    payload: colors,\r\n  };\r\n  dispatch(action);\r\n};\r\n","import React, { PureComponent } from 'react';\r\nimport * as Action from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport Convert from '../../options/convert';\r\nimport Model from '../../options/modelsColor';\r\nimport { IStrictOptions } from '../../interfaces';\r\nimport './styles.css';\r\n\r\n// Интерфейсы\r\ninterface StateProps {\r\n  H: number;\r\n  S: number;\r\n  V: number;\r\n  rgbMain: number[];\r\n  style_options: IStrictOptions;\r\n}\r\ninterface DispatchProps {\r\n  add_color: (mas: any) => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\n// Компонент\r\nexport class Picker extends PureComponent<Props> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.mouseDown = this.mouseDown.bind(this);\r\n    this.touchMoveStart = this.touchMoveStart.bind(this);\r\n    this.touchMove = this.touchMove.bind(this);\r\n    this.cPos = this.cPos.bind(this);\r\n  }\r\n\r\n  state = {\r\n    on: false,\r\n  };\r\n\r\n  picker = {\r\n    pxX: this.props.style_options.picker.width / 100,\r\n    pxY: this.props.style_options.picker.height / 100,\r\n    left: 0,\r\n    top: 0,\r\n  };\r\n\r\n  blockRef: any = React.createRef();\r\n\r\n  styleCircle = {};\r\n  styleBlock = {};\r\n\r\n  componentDidMount() {\r\n    this.updateCoords();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    let { style_options } = prevProps;\r\n    let { style_options: nst } = this.props;\r\n    let { picker } = this;\r\n    // picker, circle\r\n    let { picker: p } = nst;\r\n    let { width: pw, height: ph } = p;\r\n    if (style_options !== nst) {\r\n      picker.pxX = pw / 100;\r\n      picker.pxY = ph / 100;\r\n\r\n      this.updateCoords();\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  handleMouseMove = e => {\r\n    this.cPos(e, true);\r\n  };\r\n\r\n  mouseDown(e) {\r\n    this.updateCoords();\r\n    this.cPos(e, true);\r\n\r\n    document.addEventListener('mousemove', this.handleMouseMove);\r\n\r\n    document.onmouseup = () => {\r\n      document.removeEventListener('mousemove', this.handleMouseMove);\r\n    };\r\n  }\r\n\r\n  updateCoords() {\r\n    let block = this.blockRef.current;\r\n    let { left, top } = block.getBoundingClientRect();\r\n    this.picker.left = left;\r\n    this.picker.top = top;\r\n  }\r\n\r\n  cPos(c: any, bool: boolean) {\r\n    if (bool) c.preventDefault();\r\n\r\n    const { pxX, pxY, left: positX, top: positY } = this.picker;\r\n    const { width, height } = this.props.style_options.picker;\r\n\r\n    let left = +(c.clientX - positX).toFixed(2);\r\n    let top = +(c.clientY - positY).toFixed(2);\r\n\r\n    // Проверка left\r\n    left = left < 0 ? 0 : left > width ? width : left;\r\n\r\n    // Проверка top\r\n    top = top > height ? height : top < 0 ? 0 : top;\r\n\r\n    const S = Math.ceil(left / pxX);\r\n    const V = Math.ceil(Math.abs(top / pxY - 100));\r\n\r\n    this.props.add_color([null, S, V]);\r\n  }\r\n\r\n  touchMoveStart(e) {\r\n    this.updateCoords();\r\n    this.touchMove(e);\r\n  }\r\n\r\n  touchMove(e: any) {\r\n    // e.preventDefault();\r\n    var touches = e.changedTouches;\r\n    for (let i = 0; i < touches.length; i++) {\r\n      let newEvent = {\r\n        clientX: touches[i].pageX,\r\n        clientY: touches[i].pageY,\r\n      };\r\n      this.cPos(newEvent, false);\r\n    }\r\n  }\r\n\r\n  getStyleBlock() {\r\n    let { width, height } = this.props.style_options.picker;\r\n    let { H } = this.props;\r\n    let rgb = 'rgb(' + Convert.hsv_rgb(H, 100, 100) + ')';\r\n    let background = `linear-gradient(to top, rgb(0, 0, 0), transparent), linear-gradient(to left, ${rgb} , rgb(255, 255, 255))`;\r\n\r\n    this.styleBlock = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      background,\r\n    };\r\n  }\r\n\r\n  getStyleCircle() {\r\n    const { width, height } = this.props.style_options.circle;\r\n    const { width: W, height: H } = this.props.style_options.picker;\r\n    const { pxX, pxY } = this.picker;\r\n    const { S, V } = this.props;\r\n    const backgroundColor = Model.rgb.getStr(this.props.rgbMain);\r\n    let left: number | string = pxX * S;\r\n    let top: number | string = pxY * Math.abs(V - 100);\r\n\r\n    // Проверка left\r\n    left = left < 0 ? 0 + 'px' : left > W ? W : left + 'px';\r\n    // Проверка top\r\n    top = top > H ? H + 'px' : top < 0 ? 0 : top + 'px';\r\n\r\n    this.styleCircle = {\r\n      width: width + 'px',\r\n      height: height + 'px',\r\n      left,\r\n      top,\r\n      backgroundColor,\r\n    };\r\n  }\r\n  render() {\r\n    this.getStyleCircle();\r\n    this.getStyleBlock();\r\n    return (\r\n      <div\r\n        ref={this.blockRef}\r\n        onMouseDown={this.mouseDown}\r\n        onTouchStart={this.touchMoveStart}\r\n        onTouchMove={this.touchMove}\r\n        onTouchEnd={this.touchMove}\r\n        className=\"cp_block-picker\"\r\n        id=\"cp_block-picker\"\r\n        style={this.styleBlock}\r\n      >\r\n        <div\r\n          className=\"cp_block-circle\"\r\n          id=\"cp_block-circle\"\r\n          style={this.styleCircle}\r\n          draggable={false}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ H, S, V, rgbMain, options }: any) => {\r\n  return {\r\n    H,\r\n    S,\r\n    V,\r\n    rgbMain,\r\n    style_options: options,\r\n  };\r\n};\r\nconst mapDispatchToProps: DispatchProps = {\r\n  add_color: Action.eventHSV,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Picker);\r\n","import Picker from \"./Picker\";\r\n\r\nexport default Picker;\r\n","import React, { Component } from 'react';\r\n\r\ntype Props = {};\r\n\r\nclass PresentColorTheme<TProps = Props> extends Component<TProps> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  stylePresent = {};\r\n\r\n  handleClick() {}\r\n  stylingPresent() {}\r\n\r\n  render() {\r\n    this.stylingPresent();\r\n    return (\r\n      <div className=\"cp_present-cell\">\r\n        <div\r\n          className=\"cp_present-color\"\r\n          onClick={this.handleClick}\r\n          style={this.stylePresent}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PresentColorTheme;\r\n","import { connect } from 'react-redux';\r\nimport PresentColorTheme from './PresentColor';\r\nimport { ThemeStore } from '../../interfaces';\r\nimport * as Action from '../../actions';\r\nimport './styles.css';\r\n\r\ninterface StateProps {\r\n  prevColor: string;\r\n}\r\n\r\ninterface DispatchProps {\r\n  add_color: () => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\nclass PresentColorLast extends PresentColorTheme<Props> {\r\n  handleClick() {\r\n    this.props.add_color();\r\n  }\r\n\r\n  stylingPresent() {\r\n    this.stylePresent = {\r\n      backgroundColor: this.props.prevColor,\r\n    };\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ prevColor }: ThemeStore): StateProps => {\r\n  return {\r\n    prevColor,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  add_color: Action.eventClickPrevColor,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(PresentColorLast);\r\n","import PresentColorTheme from './PresentColor';\r\nimport { connect } from 'react-redux';\r\nimport { ThemeStore } from '../../interfaces';\r\nimport Model from '../../options/modelsColor';\r\nimport './styles.css';\r\n\r\ninterface StateProps {\r\n  rgbMain: number[];\r\n  opacity: number;\r\n}\r\n\r\ntype Props = StateProps;\r\n\r\nclass PresentColorOut extends PresentColorTheme<Props> {\r\n  stylingPresent() {\r\n    let { opacity, rgbMain } = this.props;\r\n    this.stylePresent = {\r\n      backgroundColor: Model.rgb.getString(rgbMain, opacity),\r\n    };\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ rgbMain, opacity }: ThemeStore) => {\r\n  return {\r\n    rgbMain,\r\n    opacity,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {},\r\n)(PresentColorOut);\r\n","import React, { PureComponent } from 'react';\r\ntype Props = {};\r\n\r\nclass RegulateTheme<TProps = Props> extends PureComponent<TProps> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.cPos = this.cPos.bind(this);\r\n    this.touchMove = this.touchMove.bind(this);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.touchStart = this.touchStart.bind(this);\r\n    this.mouseDown = this.mouseDown.bind(this);\r\n  }\r\n  regulateLine: any = React.createRef();\r\n\r\n  line = {\r\n    w: 0,\r\n    h: 0,\r\n    left: 0,\r\n    x: 0,\r\n  };\r\n  diff = 0;\r\n  styleCircle = {};\r\n\r\n  updateCoords() {\r\n    let elem = this.regulateLine.current;\r\n    let { left } = elem.getBoundingClientRect();\r\n    this.line.left = left;\r\n  }\r\n  updateElem() {\r\n    let elem = this.regulateLine.current;\r\n    let { line } = this;\r\n    line.w = elem.offsetWidth;\r\n    line.h = elem.offsetHeight;\r\n    line.x = elem.offsetWidth / this.diff;\r\n    this.updateCoords();\r\n  }\r\n  handleMouseMove(e) {\r\n    this.cPos(e, true);\r\n  }\r\n\r\n  mouseDown(e) {\r\n    this.updateCoords();\r\n    this.cPos(e, true);\r\n    document.addEventListener('mousemove', this.handleMouseMove);\r\n\r\n    document.onmouseup = () => {\r\n      document.removeEventListener('mousemove', this.handleMouseMove);\r\n    };\r\n  }\r\n  touchStart(e) {\r\n    this.updateCoords();\r\n    this.touchMove(e);\r\n  }\r\n  componentDidMount() {\r\n    this.updateElem();\r\n    this.forceUpdate();\r\n  }\r\n\r\n  touchMove(e: any) {\r\n    e.stopPropagation();\r\n    var touches = e.changedTouches;\r\n    for (let i = 0; i < touches.length; i++) {\r\n      const newEvent = {\r\n        clientX: touches[i].pageX,\r\n        clientY: touches[i].pageY,\r\n      };\r\n      this.cPos(newEvent, false);\r\n    }\r\n  }\r\n\r\n  cPos(c: any, bool: boolean) {\r\n    if (bool) c.preventDefault();\r\n    const { line } = this;\r\n    let left, a;\r\n    left = Number(c.clientX - line.left).toFixed(2);\r\n    a = left < 0 ? 0 : left;\r\n    a = a > line.w ? line.w : a;\r\n    this.hookCPos(a);\r\n  }\r\n\r\n  hookCPos(a: number) {}\r\n\r\n  getLeft() {\r\n    return 0;\r\n  }\r\n\r\n  stylingCircle() {\r\n    const { line } = this;\r\n\r\n    let left = this.getLeft();\r\n\r\n    left = left < 0 ? 0 : left > line.w ? line.w : left;\r\n\r\n    this.styleCircle = {\r\n      left: left + 'px',\r\n    };\r\n  }\r\n}\r\n\r\nexport default RegulateTheme;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as Action from '../../actions';\r\nimport RegulateTheme from './RegulateTheme';\r\nimport './styles.css';\r\n\r\nexport interface StateProps {\r\n  H: number;\r\n  width: number;\r\n}\r\n\r\nexport interface DispatchProps {\r\n  add_color: (hsv: any) => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\nexport class RegulateColor extends RegulateTheme<Props> {\r\n  diff = 360;\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.width !== prevProps.width) {\r\n      this.updateElem();\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n\r\n  hookCPos(a: number) {\r\n    const { line } = this;\r\n    const h = Math.abs(Math.round(a / line.x) - 360);\r\n    this.props.add_color([h, null, null]);\r\n  }\r\n\r\n  getLeft() {\r\n    const {\r\n      line,\r\n      props: { H },\r\n    } = this;\r\n    const left = Math.abs((H - 360) * line.x);\r\n    return left;\r\n  }\r\n\r\n  events = {\r\n    onMouseDown: this.mouseDown,\r\n    onTouchStart: this.touchStart,\r\n    onTouchMove: this.touchMove,\r\n    onTouchEnd: this.touchMove,\r\n  };\r\n\r\n  render() {\r\n    this.stylingCircle();\r\n    return (\r\n      <div className=\"cp_w-reg\">\r\n        <div\r\n          className=\"cp_reg-line color\"\r\n          ref={this.regulateLine}\r\n          {...this.events}\r\n        ></div>\r\n        <div\r\n          {...this.events}\r\n          style={this.styleCircle}\r\n          draggable={false}\r\n          className=\"cp_reg-circle\"\r\n          id=\"cp_reg-circle\"\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ H, options }) => {\r\n  return {\r\n    H,\r\n    width: options.picker.width,\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  add_color: Action.eventHSV,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(RegulateColor);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as Action from '../../actions';\r\nimport RegulateTheme from './RegulateTheme';\r\n\r\nexport interface StateProps {\r\n  opacity: number;\r\n  width: number;\r\n  resize: boolean;\r\n}\r\n\r\nexport interface DispatchProps {\r\n  add_opacity: (n: number) => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\nclass RegulateOpacity extends RegulateTheme<Props> {\r\n  diff = 100;\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.width !== prevProps.width) {\r\n      this.updateElem();\r\n      this.forceUpdate();\r\n    }\r\n  }\r\n  hookCPos(a: number) {\r\n    const { line } = this;\r\n    let opacity: number = +(Math.floor(a / line.x) * 0.01).toFixed(2);\r\n    this.props.add_opacity(opacity);\r\n  }\r\n\r\n  getLeft() {\r\n    const {\r\n      line,\r\n      props: { opacity },\r\n    } = this;\r\n\r\n    let left = (opacity * line.x) / 0.01;\r\n    return left;\r\n  }\r\n  events = {\r\n    onMouseDown: this.mouseDown,\r\n    onTouchStart: this.touchStart,\r\n    onTouchMove: this.touchMove,\r\n    onTouchEnd: this.touchMove,\r\n  };\r\n  render() {\r\n    this.stylingCircle();\r\n    return (\r\n      <div className=\"cp_w-reg\">\r\n        <div\r\n          className=\"cp_reg-line opacity\"\r\n          ref={this.regulateLine}\r\n          {...this.events}\r\n        >\r\n          <div className=\"cp_reg-op-cover\"></div>\r\n        </div>\r\n\r\n        <div\r\n          {...this.events}\r\n          style={this.styleCircle}\r\n          draggable={false}\r\n          className=\"cp_reg-circle\"\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ opacity, resize, options }: any) => {\r\n  return {\r\n    opacity,\r\n    resize,\r\n\r\n    width: options.picker.width,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  add_opacity: Action.eventOpacity,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(RegulateOpacity);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as Action from '../../actions';\r\nimport classNames from 'classnames';\r\nimport './styles.css';\r\n\r\n// Interfaces\r\ninterface IBtnChangeProps {\r\n  name: string;\r\n  text: string;\r\n  type: string;\r\n  changeType: (type: string) => void;\r\n}\r\n\r\nexport const BtnChangeType = function({\r\n  name,\r\n  text,\r\n  type,\r\n  changeType,\r\n}: IBtnChangeProps) {\r\n  let elemClass = classNames('cp_btn-type', { active: type === name });\r\n\r\n  return (\r\n    <li>\r\n      <button className={elemClass} onClick={() => changeType(name)}>\r\n        {text}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ type }) => {\r\n  return { type };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  changeType: Action.eventBtnChangeType,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(BtnChangeType);\r\n","import BtnChangeType from \"./BtnChangeType\";\r\n\r\nexport default BtnChangeType;\r\n","import React, { useState } from 'react';\r\nimport { ReactReduxContext } from 'react-redux';\r\nimport copy from 'copy-text-to-clipboard';\r\nimport Model from '../../options/modelsColor';\r\nimport classNames from 'classnames';\r\nimport './styles.css';\r\n\r\nfunction CopyColor({ store }) {\r\n  let [copied, setCopied] = useState(false);\r\n\r\n  function handleClick() {\r\n    const { models, type, opacity } = store.getState();\r\n    let color = Model[type].getString(models[type], opacity);\r\n\r\n    let bool = copy(color);\r\n    if (bool) {\r\n      setCopied(true);\r\n      setTimeout(() => {\r\n        setCopied(false);\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  let elemClass = classNames('cp_copy-color', { active: copied });\r\n  return (\r\n    <React.Fragment>\r\n      {/* \r\n      // @ts-ignore */}\r\n      <div className={elemClass} name=\"Copied\" onClick={() => handleClick()}>\r\n        <img\r\n          src=\"svg/copy.svg\"\r\n          className=\"copy-color\"\r\n          id=\"copy-color\"\r\n          alt=\"Copy color\"\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction CopyWrapper() {\r\n  return (\r\n    <ReactReduxContext.Consumer>\r\n      {({ store }) => {\r\n        return <CopyColor store={store} />;\r\n      }}\r\n    </ReactReduxContext.Consumer>\r\n  );\r\n}\r\n\r\nexport default CopyWrapper;\r\n","import CopyColor from './CopyColor';\r\n\r\nexport default CopyColor;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport reducer from '../reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport { connect } from 'react-redux';\r\nimport * as Action from '../../actions';\r\nimport classnames from 'classnames';\r\n\r\ninterface StateProps {\r\n  model: number[] | string[];\r\n  opacity: number;\r\n}\r\ninterface DispatchProps {\r\n  changeModel: (val: string | number, index: number) => void;\r\n  changeOpacity: (opacity: number) => void;\r\n}\r\n\r\ninterface IInputCell {\r\n  maxLength: number;\r\n  index: number;\r\n  opacityBool?: boolean;\r\n  hexBool?: boolean;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps & IInputCell;\r\n\r\nexport class InputCell extends Component<Props> {\r\n  state = {\r\n    label: '',\r\n  };\r\n  componentDidMount() {\r\n    const { opacityBool, hexBool, opacity, model, index } = this.props;\r\n    let label;\r\n    if (opacityBool) label = opacity;\r\n    else if (hexBool) label = model;\r\n    else if (!hexBool) label = String(model[index]);\r\n    this.setState({ label });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    const { opacityBool, hexBool, opacity, model, index } = this.props;\r\n    const { opacity: op, model: md } = nextProps;\r\n\r\n    let bool = false;\r\n    let label = '';\r\n    if (opacityBool) {\r\n      if (op !== opacity) label = String(op);\r\n    } else if (!hexBool) {\r\n      if (md[index] !== model[index]) label = String(md[index]);\r\n    } else if (hexBool) {\r\n      if (md !== model) label = String(md);\r\n    }\r\n    if (nextState.label !== this.state.label) {\r\n      label = String(nextState.label);\r\n      bool = true;\r\n    }\r\n    if (label !== '') {\r\n      this.setState({ label });\r\n    }\r\n\r\n    return bool;\r\n  }\r\n\r\n  inputChange(e) {\r\n    const { hexBool, index, opacityBool } = this.props;\r\n\r\n    let label = e.target.value;\r\n    if (!hexBool) {\r\n      label = label.replace(/[^\\d.-]/g, '');\r\n    }\r\n    if (label !== this.state.label) {\r\n      if (opacityBool) this.props.changeOpacity(+label);\r\n      else this.props.changeModel(label, index);\r\n\r\n      this.setState({ label });\r\n    }\r\n  }\r\n  options = {\r\n    type: 'text',\r\n    maxLength: this.props.maxLength,\r\n    value: String(this.state.label),\r\n    onChange: e => this.inputChange(e),\r\n    className: classnames('cp_model-input', { hex: this.props.hexBool }),\r\n  };\r\n\r\n  getInputOptions() {\r\n    this.options.value = this.state.label;\r\n    return this.options;\r\n  }\r\n\r\n  render() {\r\n    return <input {...this.getInputOptions()} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ models, opacity, type }: any): StateProps => {\r\n  return {\r\n    model: models[type],\r\n    opacity,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps: DispatchProps = {\r\n  changeModel: Action.eventChangeInputModel,\r\n  changeOpacity: Action.eventChangeInputOpacity,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(InputCell);\r\n","import InputCell from './InputCell';\r\n\r\nexport default InputCell;\r\n","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport store from '../../store/store';\r\nimport InputCell from '../InputCell';\r\n\r\ninterface StateProps {\r\n  type: string;\r\n}\r\ntype Props = StateProps;\r\nexport class Models extends PureComponent<Props> {\r\n  inputs;\r\n  UNSAFE_componentWillMount() {\r\n    const { type } = this.props;\r\n    this.update(type);\r\n  }\r\n  UNSAFE_componentWillUpdate(nextProps) {\r\n    const { type } = nextProps;\r\n    this.update(type);\r\n  }\r\n  update(type: string) {\r\n    const { models } = store.getState();\r\n    let value = models[type];\r\n    if (typeof value == 'string') {\r\n      this.inputs = <InputCell maxLength={9} hexBool={true} index={1} />;\r\n    } else if (typeof value == 'object' && value.slice) {\r\n      this.inputs = value.map((elem, index) => (\r\n        <InputCell key={index} index={index} maxLength={4} />\r\n      ));\r\n      this.inputs.push(\r\n        <InputCell\r\n          key={value.length}\r\n          index={value.length}\r\n          maxLength={4}\r\n          opacityBool={true}\r\n        />,\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <li>\r\n        <div className=\"cp_model-w\">{this.inputs}</div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ type }) => ({ type });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {},\r\n)(Models);\r\n","import Models from './Models';\r\n\r\nexport default Models;\r\n","import Model from './Model';\r\n\r\nexport default Model;\r\n","import React, { Component } from 'react';\r\nimport BtnChangeType from '../BtnChangeType';\r\nimport CopyColor from '../CopyColor';\r\nimport store from '../../store/store';\r\nimport Models from '../Models';\r\n\r\nexport class Model extends Component {\r\n  buttons;\r\n  UNSAFE_componentWillMount() {\r\n    const { models } = store.getState();\r\n    let keys = Object.keys(models);\r\n    this.buttons = keys.map(name => {\r\n      let text = name.charAt(0).toUpperCase() + name.slice(1);\r\n      return <BtnChangeType key={name} {...{ text, name }} />;\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"cp_models\">\r\n        <div className=\"cp_models-copy\">\r\n          <ul className=\"cp_list-models\">\r\n            <Models />\r\n          </ul>\r\n          <CopyColor />\r\n        </div>\r\n        <ul className=\"cp_list-type-color\">{this.buttons}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Model;\r\n","import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nconst Swatch = ({ color, name, handleClick, index }) => {\r\n  const style = { backgroundColor: color };\r\n  function handleClickSwatch() {\r\n    handleClick(index);\r\n  }\r\n  return (\r\n    <div className=\"cp_swatch-opacity\">\r\n      {/* \r\n  // @ts-ignore */}\r\n      <div\r\n        className=\"cp_swatch-color\"\r\n        style={style}\r\n        name={name}\r\n        onClick={handleClickSwatch}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Swatch;\r\n","import React, { Component } from 'react';\r\nimport './styles.css';\r\n\r\ninterface OwnProps {\r\n  text: string;\r\n  funcYes: () => void;\r\n  funcNo: () => void;\r\n  right: string;\r\n  left: string;\r\n}\r\ntype Props = OwnProps;\r\nexport default class ThemeWarning extends Component<Props> {\r\n  render() {\r\n    let { text, funcYes, funcNo, right, left } = this.props;\r\n\r\n    return (\r\n      <div className=\"theme_warning\">\r\n        <p className=\"cp_descr-warning-text\">{text}</p>\r\n        <div>\r\n          <button className=\"cp_descr-btns yes\" onClick={funcYes}>\r\n            {left}\r\n          </button>\r\n          <button className=\"cp_descr-btns no\" onClick={funcNo}>\r\n            {right}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport ThemeWarning from './ThemeWarning';\r\nimport Model from '../../options/modelsColor';\r\nimport { Icolors, IDescription } from '../../interfaces';\r\nimport { connect } from 'react-redux';\r\nimport * as Action from '../../actions';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport store from '../../store/store';\r\n\r\nimport './styles.css';\r\n\r\ninterface StateProps {\r\n  description: IDescription;\r\n}\r\n\r\ninterface DispatchProps {\r\n  change_description: (obj: IDescription) => void;\r\n  change_colors: (colors: Icolors[]) => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\nexport class DescriptionColor extends PureComponent<Props> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClickEdit = this.handleClickEdit.bind(this);\r\n    this.handleClickDelete = this.handleClickDelete.bind(this);\r\n  }\r\n  state = {\r\n    name: '',\r\n    color: '',\r\n  };\r\n\r\n  // Ref\r\n  inputColor: any = React.createRef();\r\n  swatch: any = React.createRef();\r\n\r\n  // RgbMain\r\n  rgbMain = this.getCurrentStore().rgbMain;\r\n  opacity = this.getCurrentStore().opacity;\r\n  index = this.getCurrentStore().index;\r\n\r\n  // Warning\r\n  warningOptions = {\r\n    save: {\r\n      left: 'Yes',\r\n      right: 'No',\r\n      text: 'Save color ?',\r\n      funcYes: () => this.onSaveColor(),\r\n      funcNo: () => this.onCancelColor(),\r\n    },\r\n    edit: {\r\n      left: 'Yes',\r\n      right: 'No',\r\n      text: 'Save color ?',\r\n      funcYes: () => this.onSaveEditColor(),\r\n      funcNo: () => this.onCancelEditColor(),\r\n    },\r\n    remove: {\r\n      left: 'Yes',\r\n      right: 'No',\r\n      text: 'Delete this swatch?',\r\n      funcYes: () => this.onYesDeleteColor(),\r\n      funcNo: () => this.onNoDeleteColor(),\r\n    },\r\n  };\r\n  didmount = false;\r\n\r\n  // Redux Listener\r\n  unsubscribeStore = () => {};\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribeStore();\r\n  }\r\n  componentDidMount() {\r\n    this.unsubscribeStore = store.subscribe(this.updateStateFromStore);\r\n    this.update();\r\n    this.didmount = true;\r\n    this.updateInput();\r\n  }\r\n  updateInput() {\r\n    let value = this.inputColor.current.value;\r\n    if (this.state.name !== value) {\r\n      this.inputColor.current.value = this.state.name;\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state): any {\r\n    let obj: any = {};\r\n    const { description } = props;\r\n    const { colors } = store.getState();\r\n    const { save, index } = description;\r\n    if (save) {\r\n      obj['name'] = `Color ${colors.length + 1}`;\r\n    } else {\r\n      obj['name'] = colors[index].name;\r\n      obj['color'] = colors[index].color;\r\n    }\r\n\r\n    return obj === {} ? null : obj;\r\n  }\r\n\r\n  update() {\r\n    const { description } = this.props;\r\n    const { save, index } = description;\r\n    this.index = index;\r\n    if (save) {\r\n      this.FocusInput();\r\n    }\r\n  }\r\n  getCurrentStore() {\r\n    let {\r\n      models,\r\n      type,\r\n      opacity,\r\n      colors,\r\n      rgbMain,\r\n      description: { index },\r\n    } = store.getState();\r\n    return {\r\n      models,\r\n      type,\r\n      opacity,\r\n      colors,\r\n      rgbMain,\r\n      index,\r\n    };\r\n  }\r\n\r\n  // Redux Listener\r\n  updateStateFromStore = () => {\r\n    const { rgbMain: r, opacity: o, index: i } = this.getCurrentStore();\r\n    const { save, edit, remove, index } = this.props.description;\r\n    if (this.rgbMain !== r || this.opacity !== o) {\r\n      this.rgbMain = r;\r\n      this.opacity = o;\r\n\r\n      if (edit || save) {\r\n        let { models, type, opacity } = this.getCurrentStore();\r\n        let color = Model[type].getString(models[type], opacity);\r\n        this.swatch.current.style.backgroundColor = color;\r\n      }\r\n      // Добавить в условие this.index!==index\r\n      else if (i === this.index && !save && !edit && !remove) {\r\n        this.index = index;\r\n        this.props.change_description(this.getDescriptionWithout());\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { description: d } = prevProps;\r\n    const { description } = this.props;\r\n    if (description !== d) {\r\n      this.update();\r\n    }\r\n    this.updateInput();\r\n  }\r\n\r\n  getDescriptionWithout(...args) {\r\n    const { description } = this.props;\r\n    let arr_keys = ['edit', 'remove', 'save', 'enable'];\r\n    let descr = Object.assign({}, description);\r\n    if (args.length >= 1) {\r\n      arr_keys.forEach(item => {\r\n        let bool = args.some(str => str === item);\r\n        descr[item] = bool ? true : false;\r\n      });\r\n    } else {\r\n      arr_keys.forEach(item => {\r\n        descr[item] = false;\r\n      });\r\n    }\r\n    return descr;\r\n  }\r\n\r\n  FocusInput() {\r\n    this.inputColor.current.removeAttribute('disabled');\r\n    this.inputColor.current.focus();\r\n  }\r\n\r\n  handleChange(e) {\r\n    const { edit, save } = this.props.description;\r\n    if (edit || save) {\r\n      let name = e.target.value;\r\n      this.setState({ name });\r\n    }\r\n  }\r\n\r\n  handleClickEdit() {\r\n    this.props.change_description(this.getDescriptionWithout('edit', 'enable'));\r\n    this.FocusInput();\r\n  }\r\n  handleClickDelete() {\r\n    this.props.change_description(\r\n      this.getDescriptionWithout('remove', 'enable'),\r\n    );\r\n  }\r\n\r\n  onSaveColor() {\r\n    let name = this.inputColor.current.value;\r\n\r\n    const { type, models, opacity, colors } = this.getCurrentStore();\r\n\r\n    let color = Model[type].getString(models[type], opacity);\r\n\r\n    let time = new Date().getTime();\r\n    let cls = colors.slice();\r\n    let id = name + ' ' + time;\r\n    cls.push({ name, color, id });\r\n    let index = cls.length - 1;\r\n    this.props.change_colors(cls);\r\n\r\n    this.props.change_description({\r\n      ...this.getDescriptionWithout('enable'),\r\n      index,\r\n    });\r\n  }\r\n\r\n  onCancelColor() {\r\n    this.props.change_description(this.getDescriptionWithout());\r\n  }\r\n  onSaveEditColor() {\r\n    const { type, models, opacity, colors } = this.getCurrentStore();\r\n    const { description } = this.props;\r\n    const { index } = description;\r\n    let name = this.inputColor.current.value;\r\n    let color = Model[type].getString(models[type], opacity);\r\n\r\n    let cls = colors.slice();\r\n    cls[index] = { ...cls[index], name, color };\r\n\r\n    this.props.change_colors(cls);\r\n\r\n    this.props.change_description(this.getDescriptionWithout('enable'));\r\n  }\r\n  onCancelEditColor() {\r\n    this.props.change_description(this.getDescriptionWithout('enable'));\r\n  }\r\n  onYesDeleteColor() {\r\n    const { description } = this.props;\r\n    const { index } = description;\r\n    const { colors } = this.getCurrentStore();\r\n\r\n    let cls = colors.slice();\r\n    cls.splice(index, 1);\r\n    this.props.change_colors(cls);\r\n\r\n    this.props.change_description({\r\n      ...this.getDescriptionWithout(),\r\n      index: 0,\r\n    });\r\n  }\r\n  onNoDeleteColor() {\r\n    this.props.change_description(this.getDescriptionWithout('enable'));\r\n  }\r\n\r\n  options_warning = this.warningOptions.save;\r\n  style = {\r\n    backgroundColor: '#fff',\r\n  };\r\n\r\n  render() {\r\n    const { description } = this.props;\r\n    const { warningOptions } = this;\r\n    let { color } = this.state;\r\n\r\n    let on = false;\r\n    for (let key in warningOptions) {\r\n      if (description[key]) {\r\n        on = this.didmount;\r\n        this.options_warning = warningOptions[key];\r\n      }\r\n    }\r\n\r\n    this.style = { backgroundColor: color };\r\n\r\n    return (\r\n      <div className=\"cp_descr-color\">\r\n        <div className=\"cp_descr-container\">\r\n          <div className=\"cp_descr-part\">\r\n            <div className=\"cp_descr-opacity\">\r\n              <div\r\n                className=\"cp_descr-swatch\"\r\n                ref={this.swatch}\r\n                style={this.style}\r\n              />\r\n            </div>\r\n            <input\r\n              ref={this.inputColor}\r\n              className=\"cp_descr-input\"\r\n              disabled={true}\r\n            />\r\n          </div>\r\n          <div className=\"cp_descr-part\">\r\n            <img\r\n              className=\"cp_descr-icon cp_descr-edit\"\r\n              src=\"./svg/pencil.svg\"\r\n              alt=\"Edit color\"\r\n              onClick={this.handleClickEdit}\r\n            />\r\n            <img\r\n              className=\"cp_descr-icon cp_descr-remove\"\r\n              src=\"./svg/delete.svg\"\r\n              alt=\"Delete color\"\r\n              onClick={this.handleClickDelete}\r\n            />\r\n          </div>\r\n          <CSSTransition\r\n            in={on}\r\n            timeout={300}\r\n            classNames=\"warning\"\r\n            unmountOnExit\r\n          >\r\n            <ThemeWarning {...this.options_warning} />\r\n          </CSSTransition>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ description }): StateProps => {\r\n  return {\r\n    description,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  change_description: Action.eventChangeDescription,\r\n  change_colors: Action.event_change_colors,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(DescriptionColor);\r\n","import DescriptionColor from \"./DescriptionColor\";\r\n\r\nexport default DescriptionColor;\r\n","import React, { PureComponent } from 'react';\r\nimport Swatch from './Swatch';\r\nimport { connect } from 'react-redux';\r\nimport * as Action from '../../actions';\r\nimport { Icolors } from '../../interfaces';\r\nimport DescriptionColor from '../DescriptionColor';\r\nimport './styles.css';\r\n\r\n// Interfaces\r\ninterface StateProps {\r\n  colors: Icolors[];\r\n  descr_enable: boolean;\r\n}\r\n\r\ninterface DispatchProps {\r\n  swatchClick: (index: number) => void;\r\n  swatchAdd: () => void;\r\n}\r\n\r\ntype Props = StateProps & DispatchProps;\r\n\r\nexport class Colors extends PureComponent<Props> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleAddSwatch = this.handleAddSwatch.bind(this);\r\n  }\r\n  handleAddSwatch(e) {\r\n    this.props.swatchAdd();\r\n  }\r\n\r\n  updateElems(colors) {\r\n    this.swatches = colors.map(({ name, color, id }, index) => {\r\n      return (\r\n        <Swatch\r\n          {...{ key: id, color, index, name }}\r\n          handleClick={() => this.props.swatchClick(index)}\r\n        />\r\n      );\r\n    });\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.updateElems(this.props.colors);\r\n  }\r\n\r\n  UNSAFE_componentWillUpdate(nextProps) {\r\n    const { colors } = nextProps;\r\n    if (this.props.colors !== nextProps.colors) {\r\n      this.updateElems(colors);\r\n    }\r\n  }\r\n  swatches;\r\n\r\n  render() {\r\n    let DescriptionComponent = this.props.descr_enable ? (\r\n      <DescriptionColor />\r\n    ) : null;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"cp_custom-colors\">\r\n          {this.swatches}\r\n          <div\r\n            onClick={this.handleAddSwatch}\r\n            className=\"cp_add-color\"\r\n            id=\"cp_add-color\"\r\n          >\r\n            <img src=\"./svg/plus-symbol.svg\" alt=\"\" />\r\n          </div>\r\n        </div>\r\n        {DescriptionComponent}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// Redux Options\r\nconst mapStateToProps = ({ colors, description: { enable } }): StateProps => {\r\n  return {\r\n    colors,\r\n    descr_enable: enable,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  swatchClick: Action.eventClickSwatch,\r\n  swatchAdd: Action.eventClickAddSwatch,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Colors);\r\n","import Colors from \"./Colors\";\r\n\r\nexport default Colors;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as Action from '../../actions';\r\nimport './styles.css';\r\n\r\ninterface DispatchProps {\r\n  clickOk: () => void;\r\n  clickCancel: () => void;\r\n}\r\ntype Props = DispatchProps;\r\n\r\nexport class MainBtns extends Component<Props> {\r\n  render() {\r\n    return (\r\n      <div className=\"cp_main-btns\">\r\n        <button\r\n          className=\"cp_main-btns-button ok\"\r\n          onClick={() => this.props.clickOk()}\r\n        >\r\n          Ok\r\n        </button>\r\n        <button\r\n          className=\"cp_main-btns-button cancel\"\r\n          onClick={() => this.props.clickCancel()}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  clickOk: Action.eventClickOk,\r\n  clickCancel: Action.eventClickCancel,\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(MainBtns);\r\n","import MainBtns from './MainBtns';\r\n\r\nexport default MainBtns;\r\n","import React, { Component } from 'react';\r\nimport Picker from '../Picker';\r\nimport { PresentColorLast, PresentColorOut } from '../PresentColor';\r\nimport { RegulateColor, RegulateOpacity } from '../Regulate';\r\nimport Model from '../Model';\r\nimport { connect } from 'react-redux';\r\nimport Colors from '../Colors';\r\nimport MainBtns from '../MainBtns';\r\n\r\n// Style\r\nimport './styles.css';\r\n\r\n// Interfaces\r\ninterface StateProps {\r\n  enable: boolean;\r\n}\r\ntype Props = StateProps;\r\n\r\n// ColorPicker\r\nexport class CP extends Component<Props> {\r\n  componentDidCatch() {\r\n    console.log('Color picker does not work');\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.enable) return null;\r\n    return (\r\n      <div>\r\n        <div className=\"cp\" id=\"cp\">\r\n          <Picker />\r\n\r\n          <div className=\"cp_container\">\r\n            <div className=\"cp_settings\">\r\n              <div className=\"cp_presents-color\">\r\n                <PresentColorLast />\r\n                <PresentColorOut />\r\n              </div>\r\n\r\n              <div className=\"cp_regulate-color \">\r\n                <RegulateColor />\r\n                <RegulateOpacity />\r\n              </div>\r\n            </div>\r\n\r\n            <Model />\r\n            <Colors />\r\n\r\n            <MainBtns />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ enable }) => ({ enable });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {},\r\n)(CP);\r\n","import ColorPicker from \"./ColorPicker\";\r\n\r\nexport default ColorPicker;\r\n","import React from 'react';\r\nimport * as Action from '../../actions';\r\nimport { IColorsOptions, IOptions, Icolors } from '../../interfaces';\r\nimport store from '../../store/store';\r\n\r\nfunction changeEnable(enable: boolean) {\r\n  Action.event_change_enable(enable)(store.dispatch);\r\n}\r\n\r\nconst WithDataCP = WrappedComponent => {\r\n  class CP extends React.Component<any> {\r\n    setColors(colors: Icolors[]) {\r\n      Action.event_change_colors(colors)(store.dispatch);\r\n    }\r\n    setStyleOptions(style_options: IOptions) {\r\n      Action.event_change_options(style_options)(\r\n        store.dispatch,\r\n        store.getState,\r\n      );\r\n    }\r\n    setColor(...args) {\r\n      let color: string = args[0];\r\n      let options = args[1];\r\n\r\n      let object: IColorsOptions = {\r\n        color,\r\n        ...options,\r\n      };\r\n      Action.eventAddColor(object)(store.dispatch, store.getState);\r\n    }\r\n    switchOn() {\r\n      changeEnable(true);\r\n    }\r\n    switchOff() {\r\n      changeEnable(false);\r\n    }\r\n    colorsCP = {\r\n      add: (color: string, name: string) => {\r\n        let { colors } = store.getState();\r\n        let cls = colors.slice();\r\n        let time = new Date().getTime();\r\n        let id = name + ' ' + time;\r\n        cls.push({ name, color, id });\r\n        Action.event_change_colors(cls)(store.dispatch);\r\n      },\r\n      changeAllColors: (colors: Icolors[]) => {\r\n        Action.event_change_colors(colors)(store.dispatch);\r\n      },\r\n      remove: (str: string) => {\r\n        let { colors } = store.getState();\r\n        let cls = colors.slice();\r\n        let ind = cls.findIndex(({ name }) => name === str);\r\n        if (ind !== -1) cls.splice(ind, 1);\r\n        Action.event_change_colors(cls)(store.dispatch);\r\n      },\r\n      removeAllColors: () => {\r\n        Action.event_change_colors([])(store.dispatch);\r\n      },\r\n      change: (str: string, nwstr) => {\r\n        let { colors } = store.getState();\r\n        let cls = colors.slice();\r\n        let ind = cls.findIndex(({ name }) => name === str);\r\n        if (ind !== -1) cls[ind].name = nwstr;\r\n        Action.event_change_colors(cls)(store.dispatch);\r\n      },\r\n      getColors: () => {\r\n        let { colors } = store.getState();\r\n        let cls = colors.map(elem => ({ ...elem }));\r\n        return cls;\r\n      },\r\n    };\r\n    render() {\r\n      const {\r\n        setColors,\r\n        setStyleOptions,\r\n        setColor,\r\n        switchOn,\r\n        switchOff,\r\n        colorsCP,\r\n      } = this;\r\n      let events = {\r\n        setColors,\r\n        setStyleOptions,\r\n        setColor,\r\n        switchOn,\r\n        switchOff,\r\n        colorsCP,\r\n      };\r\n      return <WrappedComponent {...this.props} {...events} />;\r\n    }\r\n  }\r\n\r\n  return CP;\r\n};\r\n\r\nexport default WithDataCP;\r\n","import DemoInput from './DemoInput';\r\n\r\nexport default DemoInput;\r\n","import React, { Component } from 'react';\r\nimport WithDataCP from '../hoc/WithDataCP';\r\n\r\ninterface OwnProps {\r\n  getPickerOptions: (...arg) => void;\r\n  setColor: (color, options) => void;\r\n  setColors: (colors) => void;\r\n  setStyleOptions: (style_options) => void;\r\n  switchOn: () => void;\r\n  switchOff: () => void;\r\n  colorsCP: any;\r\n}\r\ntype Props = OwnProps;\r\nclass DemoInput extends Component<Props> {\r\n  state = {\r\n    color: 'hsla(154, 64%, 44%, 0.22)',\r\n    on: false,\r\n    picker_settings: {\r\n      picker: {\r\n        width: 300,\r\n        height: 160,\r\n      },\r\n      circle: {\r\n        width: 15,\r\n        height: 15,\r\n      },\r\n    },\r\n    colorOptions: {\r\n      syncColors: [this.syncColor.bind(this)],\r\n      callSave: [this.saveColor.bind(this)],\r\n      callCancel: [this.cancelColor.bind(this)],\r\n    },\r\n  };\r\n  colors = [\r\n    { name: 'dwdw', color: '#F44336', id: 'q' },\r\n    { name: 'fefef', color: '#E91E63', id: 'w' },\r\n    { name: 'fefe', color: 'rgb(156, 39, 176)', id: 'e' },\r\n    { name: 'Color 4', color: 'hsl(262, 52%, 47%)', id: 'r' },\r\n    { name: 'Color 5', color: '#3F51B5', id: 't' },\r\n    { name: 'Color 6', color: '#2196F3', id: 'y' },\r\n    { name: 'Color 7', color: '#03A9F4', id: 'u' },\r\n    { name: 'Color 8', color: '#009688', id: 'i' },\r\n    { name: 'Color 9', color: '#4CAF50', id: 'o' },\r\n    { name: 'Color 10', color: '#8BC34A', id: 'p' },\r\n  ];\r\n\r\n  syncColor(color) {\r\n    this.setState({ color });\r\n  }\r\n  saveColor(color, prevColor) {\r\n    this.setState({ color });\r\n  }\r\n  cancelColor(color, prevColor) {\r\n    this.setState({ color: prevColor });\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({ color: e.target.value });\r\n  }\r\n  handleClick() {\r\n    const { color, colorOptions } = this.state;\r\n    this.props.setColors(this.colors);\r\n    this.props.setColor(color, colorOptions);\r\n  }\r\n  handleClickScale() {\r\n    let width = 500;\r\n    this.props.setStyleOptions({ picker: { width } });\r\n    this.props.colorsCP.add('rgb(0,0,0)', 'simple black');\r\n    this.props.colorsCP.remove('Color 5');\r\n    this.props.colorsCP.change('Color 6', '666');\r\n  }\r\n\r\n  render() {\r\n    const { color } = this.state;\r\n    return (\r\n      <div>\r\n        <div className=\"picker_demonstration\">\r\n          <div className=\"wrap_my_swatch\">\r\n            <div className=\"my_swatch_opacity\"></div>\r\n            <div\r\n              className=\"my_swatch\"\r\n              id=\"my_swatch\"\r\n              onClick={() => this.handleClick()}\r\n              style={{ backgroundColor: color }}\r\n            ></div>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            onChange={e => this.handleChange(e)}\r\n            className=\"my_color_value\"\r\n            id=\"my_swatch_input\"\r\n            value={color}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WithDataCP(DemoInput);\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport ColorPicker from '../ColorPicker';\r\nimport DemoInput from '../DemoInput';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <DemoInput />\r\n        <ColorPicker />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./components/app\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\nconst root = document.getElementById(\"root\");\r\nReactDom.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  root\r\n);\r\n"],"sourceRoot":""}